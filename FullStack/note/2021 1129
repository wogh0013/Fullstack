클래스 : 객체를 만드는 설계도
인스턴스 : 클래스로부터 만들어지는 각각의 객체를 해당 클래스의 인스턴스라고 함

객체지향 자바 특징 (캡슐화 상속 다형성 추상화)

- 캡슐화 : 데이터와 알고리즘(코드)을 하나로 묶는 것
- 정보은닉 : 객체를 외부 인터페이스로 드러내고, 객체의 실제 구현 내용은 숨기는 것
- 상속 : 부모클래스를 이어받아서 자식클래스를 생성하는 기법
- 다형성 : 하나의 이름 → 많은 상황에 대처
- 추상화 : 내부 구조를 몰라도, 사용하는데 문제가 없는 것

기초 변수 : 실제 데이터 값이 저장 / byte, int, double ...
참조 변수 : 객체를 참조할 때 사용되는 변수, 객체의 참조값 저장 / 배열, 클래스, 인터페이스

메서드 : 프로그램에서 일을 하는 작은 단위
메서드 구조 
반환형 메소드명 (매개변수)
int add(int x, int y)

사용권한 : public - 누구나 사용 가능
           private - 클래스 외부에서 사용불가
반환형 : 함수가 일을 마치고, 함수 외부로 값을 보내고자 할 때 그값의 타입(없으면 void)    
함수명 : 카멜표기법(소문자 시작, 그 후 대문자)



ㅡㅡㅡㅡㅡWeekPay 프로젝트 구조ㅡㅡㅡㅡㅡ

한 명분의 데이터를 담아둘 클래스
WeekPay   -----------------> WeekPayManager -----------------> Project
String name;                WeekPay 여러 개                  WeekPayManager mgr;
int per_pay;                데이터를 저장 or
int work_time;              출력 or 수정 or 검색
int base_pay;               append()
int over_pay;               output()



int total_pay;
변수선언,
생성자를 만들고,
출력하고, 계산하기
