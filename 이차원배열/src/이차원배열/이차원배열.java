package 이차원배열;

/*
 * 시작값 + offset
 * 컴파일 타임 : 번역할 때 결정된다. 정적할당
 * 		int a; // 정해진 메모리 공간
 * 	실행시간
 * 배열
 * 
 * 정적할당 : 프로그램 실행 도중 메모리(위치)가 고정
 * 	main()		start:1000		주소
 * 	int a;		a: start		1000
 *  int b;		b: start+4		1004
 *  int c;		c: start+8		1008
 *  
 * 동적할당 : 프로그램 실행 후 시스템한테 메모리 요청
 * 			→ 힙에서 메모리 공간을 줌, 관리시스템(가비지 콜렉터)
 * int[] num = new int[10];
 * num : start + 12
 * 
 * new int[10]; 프로그램이 실행 -> 시스템이 힙에서 메모리 할당
 * 				-> 그 시작번지가 num의 데이터로 저장
 * 
 * 예전에 C언어 같은 경우에는 배열의 메모리가 컴파일 타입에 확정
 * -> 도중에 파기하고 다른 메모리 int a[10]; 확보 불가능
 * 
 * 자바는 배열의 성격 중에 연속된 공간에 메모리 확보
 * -> 배열은 반드시 연속된 공간이 있어야 사용 가능
 * 			중간에 끼워넣기 안됨
 * 			정해진 크기만 써야 해서 융통성 x
 * 			but 검색 속도가 빠름
 * 
 * 
 */


public class 이차원배열 {
	public static void main(String[] args) {
		
	}
}
